version: '3.5'

networks:
   web-app-net:
       name: my-web-app-net
       #driver: overlay
       driver: bridge

services:
   api-gateway-app:
     image: starter-api-gateway:1.0
     build:
       context: ./SpringCloudGatewayStarter
       dockerfile: Dockerfile-embedded
     environment:
       server.http.port: 80
       redis.host: redis
       redis.port: 6379
       management.endpoints.web.exposure.include: health,metrics,httptrace,prometheus,gateway
       app.authentication.host: authentication-app
       app.authentication.port: 8080
       app.content.container.host: content-container-app
       app.content.container.port: 8081
     ports:
       - 443:443
       - 80:443
     restart: on-failure
     networks:
       - web-app-net
     labels:
       collect_logs_with_filebeat: "true"
       decode_log_event_to_json_object: "true"

   authentication-app:
      image: starter-auth-api:1.0
      build:
         context: ./SpringBootAuthenticationStarter
         dockerfile: Dockerfile-embedded
      environment:
         app.db.name: authDB
         app.db.host: auth-db
         app.db.port: 3306
         app.db.username: root
         app.db.password: root@123
         management.endpoints.web.exposure.include: health,metrics,httptrace,prometheus
      ports:
        - 8080
      restart: on-failure
      networks:
        - web-app-net
      labels:
        collect_logs_with_filebeat: "true"
        decode_log_event_to_json_object: "true"

   content-container-app:
     image: starter-content-container-api:1.0
     build:
       context: ./SpringBootContentContainerStarter
       dockerfile: Dockerfile-embedded
     environment:
       mongo.db.name: testDB
       mongo.db.host: mongo-db
       mongo.db.port: 27017
       mongo.db.username: root
       mongo.db.password: example
       app.redis.host: redis
       app.redis.port: 6379
       app.activemq.host: activemq
       app.activemq.port: 61616
       app.activemq.schema: tcp://
       app.activemq.username: admin
       app.activemq.password: admin
       management.endpoints.web.exposure.include: health,metrics,httptrace,prometheus
       app.upload.dir: /home/MyUserName/Uploads
     ports:
       - 8081
     restart: on-failure
     networks:
       - web-app-net
     labels:
       collect_logs_with_filebeat: "true"
       decode_log_event_to_json_object: "true"

##End of Scripts